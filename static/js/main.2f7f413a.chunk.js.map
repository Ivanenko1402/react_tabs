{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","selectedTab","onTabSelected","className","map","tab","classNames","id","href","onClick","title","content","App","useState","setSelectedTabId","find","ReactDOM","render","document","getElementById"],"mappings":"kNAgBaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,YACAC,EACI,EADJA,cAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GAAG,OACX,oBAEEF,UACEG,IAAW,CACT,YAAaD,EAAIE,KAAOP,IAG5B,UAAQ,MAPV,SASE,mBACEQ,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QACE,WACMJ,EAAIE,KAAOP,GACbE,EAAcG,EAAIE,KAN1B,SAWGF,EAAIK,SAnBFL,EAAIE,WA0BjB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGF,GAAeA,EAAYU,cChDvBZ,EAAO,CAClB,CAAEQ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOb,EAAP,KAAsBc,EAAtB,KAEMb,EAAcF,EAAKgB,MAAK,SAAAV,GAAG,OAAIA,EAAIE,KAAOP,KAEhD,OACE,sBAAKG,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SACGF,GAAW,0BAAuBA,EAAYS,SAGjD,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,YAAaA,EACbC,cAAeY,QCzBvBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2f7f413a.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport classNames from 'classnames';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  selectedTab: Tab | undefined;\n  onTabSelected: Dispatch<SetStateAction<string>>;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  selectedTab,\n  onTabSelected,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={\n                classNames({\n                  'is-active': tab.id === selectedTabId,\n                })\n              }\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={\n                  () => {\n                    if (tab.id !== selectedTabId) {\n                      onTabSelected(tab.id);\n                    }\n                  }\n                }\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab && selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {selectedTab && `Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        selectedTab={selectedTab}\n        onTabSelected={setSelectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}